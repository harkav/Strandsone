============================= test session starts ==============================
platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.0.0 -- /home/harald/anaconda3/bin/python
cachedir: .pytest_cache
rootdir: /home/harald/repos/in3110/assignment5
plugins: anyio-3.7.1
collecting ... collected 14 items

tests/test_app.py::test_main_page PASSED                                 [  7%]
tests/test_app.py::test_form_input PASSED                                [ 14%]
tests/test_app.py::test_plot_prices_json[None-None-None] PASSED          [ 21%]
tests/test_app.py::test_plot_prices_json[locations1-2023-11-05-2] PASSED [ 28%]
tests/test_app.py::test_plot_prices_json[locations2-2023-11-03-1] PASSED [ 35%]
tests/test_app.py::test_nav_links FAILED                                 [ 42%]
tests/test_app.py::test_fastapi_docs PASSED                              [ 50%]
tests/test_app.py::test_sphinx_docs[fetch_day_prices] ERROR              [ 57%]
tests/test_app.py::test_sphinx_docs[fetch_prices] ERROR                  [ 64%]
tests/test_app.py::test_sphinx_docs[plot_prices] ERROR                   [ 71%]
tests/test_app.py::test_plot_activity_html FAILED                        [ 78%]
tests/test_app.py::test_plot_activity_json[shower-10-NO1] FAILED         [ 85%]
tests/test_app.py::test_plot_activity_json[baking-30-NO2] FAILED         [ 92%]
tests/test_app.py::test_plot_activity_json[heat-5-NO4] FAILED            [100%]

==================================== ERRORS ====================================
_____________ ERROR at setup of test_sphinx_docs[fetch_day_prices] _____________

client = <starlette.testclient.TestClient object at 0x7f31a4b1f0d0>

    @pytest.fixture
    def doc_pages(client):
        doc_root = "/help/"
        response = client.get(doc_root)
>       assert response.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_app.py:151: AssertionError
_______________ ERROR at setup of test_sphinx_docs[fetch_prices] _______________

client = <starlette.testclient.TestClient object at 0x7f31a60d9010>

    @pytest.fixture
    def doc_pages(client):
        doc_root = "/help/"
        response = client.get(doc_root)
>       assert response.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_app.py:151: AssertionError
_______________ ERROR at setup of test_sphinx_docs[plot_prices] ________________

client = <starlette.testclient.TestClient object at 0x7f31a60bbe10>

    @pytest.fixture
    def doc_pages(client):
        doc_root = "/help/"
        response = client.get(doc_root)
>       assert response.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_app.py:151: AssertionError
=================================== FAILURES ===================================
________________________________ test_nav_links ________________________________

client = <starlette.testclient.TestClient object at 0x7f31a4caf610>

    def test_nav_links(client):
        response = client.get("/")
        # check for some expected elements
        page = BeautifulSoup(response.text, "html.parser")
        doc_link = page.find("a", href=re.compile("/docs/?"))
>       assert doc_link, "Found no link to fastapi docs: `<a href=/docs"
E       AssertionError: Found no link to fastapi docs: `<a href=/docs
E       assert None

tests/test_app.py:123: AssertionError
___________________________ test_plot_activity_html ____________________________

client = <starlette.testclient.TestClient object at 0x7f31a6082a10>

    def test_plot_activity_html(client):
        r = client.get("/activity")
>       assert r.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_app.py:216: AssertionError
____________________ test_plot_activity_json[shower-10-NO1] ____________________

client = <starlette.testclient.TestClient object at 0x7f31a609cdd0>
activity = 'shower', minutes = 10, location = 'NO1'

    @pytest.mark.parametrize(
        "activity, minutes, location",
        [
            ("shower", 10, "NO1"),
            ("baking", 30, "NO2"),
            ("heat", 5, "NO4"),
        ],
    )
    def test_plot_activity_json(client, activity, minutes, location):
        params = {
            "activity": activity,
            "minutes": minutes,
            "location": location,
        }
        r = client.get("/plot_activity.json", params=params)
>       assert r.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_app.py:241: AssertionError
____________________ test_plot_activity_json[baking-30-NO2] ____________________

client = <starlette.testclient.TestClient object at 0x7f31a60a7d10>
activity = 'baking', minutes = 30, location = 'NO2'

    @pytest.mark.parametrize(
        "activity, minutes, location",
        [
            ("shower", 10, "NO1"),
            ("baking", 30, "NO2"),
            ("heat", 5, "NO4"),
        ],
    )
    def test_plot_activity_json(client, activity, minutes, location):
        params = {
            "activity": activity,
            "minutes": minutes,
            "location": location,
        }
        r = client.get("/plot_activity.json", params=params)
>       assert r.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_app.py:241: AssertionError
_____________________ test_plot_activity_json[heat-5-NO4] ______________________

client = <starlette.testclient.TestClient object at 0x7f31a86e1490>
activity = 'heat', minutes = 5, location = 'NO4'

    @pytest.mark.parametrize(
        "activity, minutes, location",
        [
            ("shower", 10, "NO1"),
            ("baking", 30, "NO2"),
            ("heat", 5, "NO4"),
        ],
    )
    def test_plot_activity_json(client, activity, minutes, location):
        params = {
            "activity": activity,
            "minutes": minutes,
            "location": location,
        }
        r = client.get("/plot_activity.json", params=params)
>       assert r.status_code == 200
E       assert 404 == 200
E        +  where 404 = <Response [404 Not Found]>.status_code

tests/test_app.py:241: AssertionError
=========================== short test summary info ============================
FAILED tests/test_app.py::test_nav_links - AssertionError: Found no link to f...
FAILED tests/test_app.py::test_plot_activity_html - assert 404 == 200
FAILED tests/test_app.py::test_plot_activity_json[shower-10-NO1] - assert 404...
FAILED tests/test_app.py::test_plot_activity_json[baking-30-NO2] - assert 404...
FAILED tests/test_app.py::test_plot_activity_json[heat-5-NO4] - assert 404 ==...
ERROR tests/test_app.py::test_sphinx_docs[fetch_day_prices] - assert 404 == 200
ERROR tests/test_app.py::test_sphinx_docs[fetch_prices] - assert 404 == 200
ERROR tests/test_app.py::test_sphinx_docs[plot_prices] - assert 404 == 200
==================== 5 failed, 6 passed, 3 errors in 1.59s =====================
